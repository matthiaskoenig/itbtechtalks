# Create two services (parts of the application)
# - use image we created
# - map port 4000 on the host to web’s port 80.
# - run 5 instances of that image as a service called web, limiting each one to use, at most, 10% of the CPU (across all cores), and 50MB of RAM.
# - immediately restart containers if one fails.
# - instruct web’s containers to share port 80 via a load-balanced network called webnet. (Internally, the containers themselves publish to web’s port 80 at an ephemeral port.)
# - define the webnet network with the default settings (which is a load-balanced overlay network).
#

version: "3"
services:
  web:
    image: flaskapp
    deploy:
      replicas: 5
      resources:
        limits:
          cpus: "0.1"
          memory: 50M
      restart_policy:
        condition: on-failure
    ports:
      - "4000:80"
    networks:
      - webnet

  redis:
    image: redis
    ports:
      - "7000:6379"
    volumes:
      - "/home/docker/data:/data"
    deploy:
      placement:
        constraints: [node.role == manager]
    command: redis-server --appendonly yes
    networks:
      - webnet

networks:
  webnet:
